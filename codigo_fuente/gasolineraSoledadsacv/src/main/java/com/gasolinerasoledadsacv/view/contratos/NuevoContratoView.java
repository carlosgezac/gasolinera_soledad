package com.gasolinerasoledadsacv.view.contratos;

import com.gasolinerasoledadsacv.controller.ContratoJpaController;
import com.gasolinerasoledadsacv.controller.EmpleadoJpaController;
import com.gasolinerasoledadsacv.entity.Contrato;
import com.gasolinerasoledadsacv.entity.Empleado;
import com.gasolinerasoledadsacv.enums.PersistenceEnum;
import com.gasolinerasoledadsacv.util.DateUtil;
import java.awt.Color;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.border.Border;

public class NuevoContratoView extends javax.swing.JFrame {

    private ListadoContratosView listadoContratosView;
    private final EntityManagerFactory emf = Persistence.createEntityManagerFactory(PersistenceEnum.PERSISTENCE_UNIT_NAME.getValue());
    private EmpleadoJpaController empleadoJpaController;
    private ContratoJpaController contratoJpaController;
    private Empleado empleado;
    private Contrato contrato = new Contrato();
    private Contrato oldContrato;
    private String numEmpleado;

    public NuevoContratoView(String numEmpleado, ListadoContratosView listadoContratosView) {
        initComponents();
        this.listadoContratosView = listadoContratosView;
        this.numEmpleado = numEmpleado;
        this.llenarCamposNuevo(numEmpleado);
    }

    public NuevoContratoView(int idContrato, ListadoContratosView listadoContratosView) {
        initComponents();
        this.listadoContratosView = listadoContratosView;
        this.llenarCamposEdicion(idContrato);
        this.numEmpleado = empleado.getNumeroEmpleado();
    }

    private void llenarCamposNuevo(String numEmpleado) {
        empleadoJpaController = new EmpleadoJpaController(emf);
        this.empleado = empleadoJpaController.findByNumeroEmpleado(numEmpleado);
        this.labelEmpleado.setText(empleado.getNumeroEmpleado() + " - " + empleado.getNombre() + " " + empleado.getApellidoPaterno() + " " + empleado.getApellidoMaterno());

    }

    private void llenarCamposEdicion(int idContrato) {
        contratoJpaController = new ContratoJpaController(emf);
        this.contrato = contratoJpaController.findContrato(idContrato);
        try {
            oldContrato = (Contrato) contrato.clone();
        } catch (CloneNotSupportedException ex) {
        }
        this.empleado = contrato.getEmpleado();
        this.labelEmpleado.setText(empleado.getNumeroEmpleado() + " - " + empleado.getNombre() + " " + empleado.getApellidoPaterno() + " " + empleado.getApellidoMaterno());

        this.fieldFechaInicial.setDate(this.contrato.getFechaInicial());
        this.fieldFechaFinal.setDate(this.contrato.getFechaFinal());
        this.fieldFechaFiniquito.setDate(this.contrato.getFechaFiniquito());
        this.labelPeriodo.setText(DateUtil.substract(this.contrato.getFechaInicial(), this.contrato.getFechaFinal()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        fieldFechaInicial = new com.toedter.calendar.JDateChooser();
        fieldFechaFinal = new com.toedter.calendar.JDateChooser();
        fieldFechaFiniquito = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        labelEmpleado = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        labelPeriodo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Contrato");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setText("Fecha Inicial");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setText("Fecha Final");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setText("Fecha Finiquito");

        fieldFechaInicial.setDateFormatString("dd/MM/yyyy");

        fieldFechaFinal.setDateFormatString("dd/MM/yyyy");

        fieldFechaFiniquito.setDateFormatString("dd/MM/yyyy");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel4.setText("Empleado:");

        labelEmpleado.setText("<Empleado>");

        btnGuardar.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/guardar.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel6.setText("Periodo Contrato");

        labelPeriodo.setText("<Periodo>");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(labelEmpleado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btnGuardar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(fieldFechaFiniquito, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(fieldFechaInicial, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel3))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6)
                            .addComponent(jLabel2)
                            .addComponent(fieldFechaFinal, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                            .addComponent(labelPeriodo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(labelEmpleado))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fieldFechaInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fieldFechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldFechaFiniquito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(labelPeriodo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (!this.verificarCampos()) {
            return;
        }
        this.btnGuardar.setEnabled(false);
        contrato.setFechaInicial(fieldFechaInicial.getDate());
        contrato.setFechaFinal(fieldFechaFinal.getDate());
        contrato.setFechaFiniquito(fieldFechaFiniquito.getDate());
        contrato.setEmpleado(empleado);
        contratoJpaController = new ContratoJpaController(emf);
        if (contrato.getIdContrato() == null) {
            try {
                //Nuevo registro
                contratoJpaController.create(contrato);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "No se pudo registrar el contrato.\nIntentelo más tarde.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {//Edicion de registro
            try {
                if (!this.oldContrato.equals(contrato)) {
                    contratoJpaController.edit(contrato);
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "No se pudo editar el contrato.\nIntentelo más tarde.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        this.listadoContratosView.llenarTabla(numEmpleado);
        this.dispose();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private boolean verificarCampos() {
        boolean correcto = true;
        //Border error
        Border errorBorder = BorderFactory.createLineBorder(Color.RED, 2);
        //Obtener borde por default
        Border defaultBorder = new JTextField().getBorder();

        if (fieldFechaInicial.getDate() != null) {
            fieldFechaInicial.setBorder(defaultBorder);
            if (fieldFechaFinal.getDate() != null) {
                boolean fechaIniAfter = fieldFechaInicial.getDate().after(fieldFechaFinal.getDate());
                if (fechaIniAfter) {
                    correcto = false;
                    fieldFechaInicial.setBorder(errorBorder);
                    fieldFechaFinal.setBorder(errorBorder);
                } else {
                    fieldFechaInicial.setBorder(defaultBorder);
                    fieldFechaFinal.setBorder(defaultBorder);
                }
            } else {
                correcto = false;
                fieldFechaFinal.setBorder(errorBorder);
            }
        } else {
            correcto = false;
            fieldFechaInicial.setBorder(errorBorder);
            if (fieldFechaFinal.getDate() != null) {
                fieldFechaFinal.setBorder(defaultBorder);
            } else {
                correcto = false;
                fieldFechaFinal.setBorder(errorBorder);
            }
        }
        return correcto;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private com.toedter.calendar.JDateChooser fieldFechaFinal;
    private com.toedter.calendar.JDateChooser fieldFechaFiniquito;
    private com.toedter.calendar.JDateChooser fieldFechaInicial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel labelEmpleado;
    private javax.swing.JLabel labelPeriodo;
    // End of variables declaration//GEN-END:variables
}
